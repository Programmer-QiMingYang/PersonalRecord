############################
## devtools
############################
spring.devtools.restart.enabled=true
#############################
##配置数据源
#############################
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=818903
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
###############################
##druid连接池
###############################
# 使用 druid 作为连接池  更多配置的说明可以参见 druid starter 中文文档 https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#初始化时建立物理连接的个数。初始化发生在显示调用 init 方法，或者第一次 getConnection 时
spring.datasource.druid.initial-size=5
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量
spring.datasource.druid.max-active=10
# 获取连接时最大等待时间，单位毫秒。配置了 maxWait 之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置 useUnfairLock 属性为 true 使用非公平锁。
spring.datasource.druid.max-wait=60000
# Destroy 线程会检测连接的间隔时间，如果连接空闲时间大于等于 minEvictableIdleTimeMillis 则关闭物理连接。
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 连接保持空闲而不被驱逐的最小时间    
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 用来检测连接是否有效的 sql 因数据库方言而差, 例如 oracle 应该写成 SELECT 1 FROM DUAL
spring.datasource.druid.validation-query=SELECT 1
# 建议配置为 true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis，执行 validationQuery 检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 申请连接时执行 validationQuery 检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行 validationQuery 检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 是否自动回收超时连接
spring.datasource.druid.remove-abandoned=true
# 超时时间 (以秒数为单位)
spring.datasource.druid.remove-abandoned-timeout=180

###############################
##druid 监控的配置 如果不使用 druid 的监控功能的话
##以下配置就不是必须的
##本项目监控台访问地址: http://localhost:8080/druid/login.html
################################
# WebStatFilter 用于采集 web-jdbc 关联监控的数据。
# 更多配置可参见: https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_%E9%85%8D%E7%BD%AEWebStatFilter
# 是否开启 WebStatFilter 默认是 true


# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙  
#spring.datasource.filters=stat,wall,log4j
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录  
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;
#druid.stat.slowSqlMillis=5000 
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true
spring.datasource.druid.filter.stat.slow-sql-millis=5000
 

spring.datasource.druid.web-stat-filter.enabled=true
# 需要拦截的 url
spring.datasource.druid.web-stat-filter.url-pattern=/*
# 排除静态资源的请求
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
# Druid 内置提供了一个 StatViewServlet 用于展示 Druid 的统计信息。
# 更多配置可参见:https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatViewServlet%E9%85%8D%E7%BD%AE
#是否启用 StatViewServlet 默认值 true
spring.datasource.druid.stat-view-servlet.enabled=true
# 需要拦截的 url
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
# druid监控登陆用户名
spring.datasource.druid.stat-view-servlet.login-username=druid
# druid监控登陆密码
spring.datasource.druid.stat-view-servlet.login-password=druid

###############################
# mybatis配置
###############################
mybatis.type-aliases-package=com.example.demo.pojo
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.jdbc-type-for-null=null
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl